import { Amount, BakerId, Base58String } from '../types';
export declare type BlockSpecialEvent = BlockSpecialEventBakingRewards | BlockSpecialEventMint | BlockSpecialEventFinalizationRewards | BlockSpecialEventBlockReward | BlockSpecialEventPaydayFoundationReward | BlockSpecialEventPaydayAccountReward | BlockSpecialEventBlockAccrueReward | BlockSpecialEventPaydayPoolReward;
export interface BlockSpecialEventBakingRewards {
    tag: 'bakingRewards';
    bakingRewards: BlockSpecialEventAccountAmount[];
    remainder: Amount;
}
export interface BlockSpecialEventMint {
    tag: 'mint';
    mintBakingReward: Amount;
    mintFinalizationReward: Amount;
    mintPlatformDevelopmentCharge: Amount;
    foundationAccount: Base58String;
}
export interface BlockSpecialEventFinalizationRewards {
    tag: 'finalizationRewards';
    finalizationRewards?: BlockSpecialEventAccountAmount[];
    remainder?: Amount;
}
export interface BlockSpecialEventBlockReward {
    tag: 'blockReward';
    transactionFees: Amount;
    oldGasAccount: Amount;
    newGasAccount: Amount;
    bakerReward: Amount;
    foundationCharge: Amount;
    baker: Base58String;
    foundationAccount: Base58String;
}
export interface BlockSpecialEventPaydayFoundationReward {
    tag: 'paydayFoundationReward';
    foundationAccount: Base58String;
    developmentCharge: Amount;
}
export interface BlockSpecialEventPaydayAccountReward {
    tag: 'paydayAccountReward';
    account: Base58String;
    transactionFees: Amount;
    bakerReward: Amount;
    finalizationReward: Amount;
}
export interface BlockSpecialEventBlockAccrueReward {
    tag: 'blockAccrueReward';
    transactionFees: Amount;
    oldGasAccount: Amount;
    newGasAccount: Amount;
    bakerReward: Amount;
    passiveReward: Amount;
    foundationCharge: Amount;
    baker: BakerId;
}
export interface BlockSpecialEventPaydayPoolReward {
    tag: 'paydayPoolReward';
    poolOwner?: BakerId;
    transactionFees: Amount;
    bakerReward: Amount;
    finalizationReward: Amount;
}
export interface BlockSpecialEventAccountAmount {
    account: Base58String;
    amount: Amount;
}
