/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function generateUnsignedCredential(a: number, b: number, c: number): void;
export function getDeploymentDetails(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function getDeploymentInfo(a: number, b: number, c: number, d: number): void;
export function deserializeState(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function deserializeCredentialDeployment(a: number, b: number, c: number): void;
export function deserializeReceiveReturnValue(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number): void;
export function deserializeReceiveError(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number): void;
export function deserializeInitError(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function serializeReceiveContractParameters(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number): void;
export function serializeInitContractParameters(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): void;
export function getReceiveContractParameterSchema(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): void;
export function getInitContractParameterSchema(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function serializeTypeValue(a: number, b: number, c: number, d: number, e: number): void;
export function createIdRequestV1(a: number, b: number, c: number): void;
export function createIdentityRecoveryRequest(a: number, b: number, c: number): void;
export function createCredentialV1(a: number, b: number, c: number): void;
export function createUnsignedCredentialV1(a: number, b: number, c: number): void;
export function createIdProof(a: number, b: number, c: number): void;
export function getAccountSigningKey(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): void;
export function getAccountPublicKey(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): void;
export function getCredentialId(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number): void;
export function getPrfKey(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function getIdCredSec(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function getSignatureBlindingRandomness(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function getAttributeCommitmentRandomness(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number): void;
export function serializeCredentialDeploymentPayload(a: number, b: number, c: number, d: number): void;
export function generateBakerKeys(a: number, b: number, c: number): void;
export function deserializeTypeValue(a: number, b: number, c: number, d: number, e: number): void;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number): void;
export function __wbindgen_exn_store(a: number): void;
